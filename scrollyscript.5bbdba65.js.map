{"version":3,"sources":["../node_modules/scrollama/build/scrollama.js","scrollyscript.js"],"names":["main","document","querySelector","scrolly","sticky","article","steps","querySelectorAll","els3num","els4num","rest","scroller","handleStepEnter","response","els","priv","i","length","style","stroke","zIndex","pub","console","log","index","els2","pullInitial","els3","els4","push","parseFloat","getComputedStyle","toFixed","resizeSVG","window","innerWidth","setAttribute","init","setup","step","offset","debug","onStepEnter","addEventListener","resize"],"mappings":";;;;;;;AA4ZA,IAAA,EAAA,EAAA,UAAA,IA5ZA,SAAA,EAAA,GACA,iBAAA,SAAA,oBAAA,OAAA,OAAA,QAAA,IACA,mBAAA,GAAA,EAAA,IAAA,EAAA,IACA,EAAA,GAAA,MAAA,UAAA,IAHA,CAIA,KAAA,WAAA,aA0CA,SAAA,GAAA,GAAA,EAAA,KAAA,EAAA,UAAA,IACA,MAAA,MAAA,EAAA,OAAA,GAAA,EACA,4BAAA,KAAA,IACA,IAAA,EAAA,SAAA,kBAAA,KACA,IAAA,EA3BA,SAAA,GACA,MAAA,EAAA,SAAA,cAAA,OACA,EAAA,mCAAA,IACA,EAAA,MAAA,SAAA,QACA,EAAA,MAAA,KAAA,IACA,EAAA,MAAA,MAAA,OACA,EAAA,MAAA,OAAA,OACA,EAAA,MAAA,UAAA,kBACA,EAAA,MAAA,aAAA,kBAEA,MAAA,EAAA,SAAA,cAAA,KASA,OARA,EAAA,MAAA,SAAA,WACA,EAAA,MAAA,KAAA,IACA,EAAA,MAAA,OAAA,MACA,EAAA,MAAA,MAAA,OACA,EAAA,MAAA,UAAA,mBAEA,EAAA,YAAA,GACA,SAAA,KAAA,YAAA,GACA,EAQA,CAAA,IAEA,EAAA,MAAA,QAAA,EAAA,MACA,EAAA,MAAA,UAAA,MACA,EAAA,cAAA,KAAA,MAAA,OAAA,EAAA,MAcA,SAAA,EAAA,GACA,QAAA,0BAAA,KAGA,SAAA,EAAA,GACA,OAAA,EAAA,aAAA,wBAaA,SAAA,EAAA,GACA,GAAA,iBAAA,GAAA,EAAA,QAAA,MAAA,EAAA,CACA,MAAA,GAAA,EAAA,QAAA,KAAA,IACA,OAAA,MAAA,IAEA,IAAA,yDACA,CAAA,OAAA,UAAA,MAAA,KAHA,CAAA,OAAA,SAAA,MAAA,GAKA,MAAA,iBAAA,GAAA,OAAA,GAKA,MAJA,EAAA,GAAA,IAAA,kDACA,EAAA,GAAA,IAAA,gDACA,CAAA,OAAA,UAAA,MAAA,KAAA,IAAA,KAAA,IAAA,EAAA,GAAA,KAWA,SAAA,EAAA,GACA,MAAA,IAAA,GAAA,EAAA,wBAGA,OAAA,EAFA,OAAA,aACA,SAAA,KAAA,WAAA,GAIA,IAAA,EACA,EACA,EAEA,SAAA,EAAA,GACA,MAAA,EAAA,EAAA,EAAA,UAAA,OAAA,YAEA,IAAA,KACA,EAAA,GACA,EAAA,EAAA,OACA,EAAA,IAAA,EAAA,MACA,EAAA,GA2RA,OAlRA,WACA,IAIA,EACA,EALA,EAAA,GAEA,EAjFA,WACA,MAAA,EAAA,6BACA,EAAA,KAAA,MACA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CACA,MAAA,EAAA,EAAA,KAAA,MAAA,KAAA,SAAA,EAAA,SACA,EAAA,KAAA,GAEA,SAAA,EAAA,KAAA,MAAA,IAyEA,GACA,EAAA,GAIA,EAAA,EAEA,GAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EAEA,EAAA,GAGA,SAAA,IACA,EAAA,CACA,UAAA,OACA,SAAA,OACA,aAAA,QAEA,EAAA,GAGA,SAAA,EAAA,GACA,IAAA,GAAA,KACA,GAAA,GAAA,IACA,EAAA,EAIA,SAAA,EAAA,EAAA,GACA,MAAA,EAAA,EAAA,GACA,EAAA,EAAA,QACA,IAAA,IAAA,EAAA,SAAA,GACA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,SAAA,EAAA,UAAA,GACA,UAAA,EAAA,OAAA,EAAA,aAAA,GAyCA,SAAA,GAAA,IACA,MAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,GACA,EAAA,EAAA,OAAA,aACA,IAAA,EAAA,SACA,EAAA,OAAA,EACA,EAAA,GACA,EAAA,GACA,EAAA,IAIA,SAAA,GAAA,IACA,EAAA,GAEA,MAAA,eAAA,EAAA,OAAA,GAAA,EACA,EAtDA,SAAA,EAAA,GAAA,GACA,MAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,UAAA,GAEA,EAAA,UAAA,EACA,EAAA,MAAA,QAOA,EAAA,IAAA,EAAA,UAAA,GACA,IAAA,EAAA,IAAA,GAwCA,CAAA,GArCA,SAAA,EAAA,GAAA,GACA,MAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,IAAA,EAAA,MAAA,OAAA,EAEA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,UAAA,GAEA,IACA,SAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,SAAA,GACA,EAAA,EAAA,IAGA,EAAA,UAAA,EACA,EAAA,MAAA,OAEA,EAAA,SAAA,GAqBA,CAAA,GAGA,SAAA,GAAA,IACA,MAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,IACA,eAAA,EAAA,kBAAA,EAAA,OAAA,GAAA,EACA,GAAA,UAAA,EAAA,OACA,EAAA,EAAA,GAIA,SAAA,GAAA,UAAA,IACA,OAAA,KAAA,GAAA,IAAA,IACA,EAAA,GAAA,eAIA,SAAA,IACA,EAAA,QAAA,GAGA,SAAA,EAAA,GACA,MAAA,EAAA,IAAA,eAAA,GACA,EAAA,QAAA,EAAA,MACA,EAAA,UAAA,OAAA,EAOA,SAAA,EAAA,GACA,MAAA,EAAA,OAAA,YACA,EAAA,EAAA,QAAA,EACA,EAAA,WAAA,EAAA,OAAA,EAAA,EACA,EAAA,EAAA,MAAA,EACA,EAAA,EAAA,OAAA,EAAA,EACA,EAAA,EAAA,OAAA,GAAA,EAAA,GAKA,EAAA,IAAA,qBAAA,EADA,CAAA,cAHA,WAAA,UAGA,UADA,KAIA,EAAA,QAAA,EAAA,MACA,EAAA,UAAA,KAAA,EAEA,GAAA,EAAA,CAAA,GAAA,EAAA,KAAA,EAAA,UAAA,EAAA,aAAA,IAOA,SAAA,EAAA,GACA,MAAA,EAAA,OAAA,YACA,EAAA,EAAA,QAAA,EACA,EAAA,WAAA,EAAA,OAAA,EAAA,EACA,EAAA,EAAA,MAAA,EAGA,MAFA,EAAA,EAAA,gBACA,EAAA,UAGA,EA5NA,SAAA,EAAA,GACA,MAAA,EAAA,KAAA,KAAA,EAAA,GACA,EAAA,GACA,EAAA,EAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,GAEA,OAAA,EAqNA,CAAA,EAAA,OAAA,GAEA,EAAA,IAAA,qBAAA,EADA,CAAA,WAAA,EAAA,UAAA,IAGA,EAAA,QAAA,EAAA,MACA,EAAA,UAAA,SAAA,EAOA,SAAA,IACA,IAhDA,EAAA,QAAA,GAuBA,EAAA,QAAA,GA4BA,GAPA,EAAA,QAAA,GAWA,MAAA,EAAA,GA0FA,OAxFA,EAAA,MAAA,GACA,KAAA,EACA,OAAA,EACA,OAAA,EAAA,GACA,UAAA,EAAA,EACA,SAAA,GAAA,EACA,KAAA,GAAA,EACA,MAAA,GAAA,EACA,UAAA,MArMA,SAAA,GACA,EAAA,EACA,EAAA,EACA,SAAA,iBAAA,SAAA,IAAA,EAAA,IAqMA,CAAA,IAEA,EAlUA,SAAA,EAAA,EAAA,UACA,MAAA,iBAAA,EACA,MAAA,KAAA,EAAA,iBAAA,IACA,aAAA,QACA,CAAA,GACA,aAAA,SACA,MAAA,KAAA,GACA,aAAA,MACA,EAEA,GAwTA,CAAA,EAAA,GAAA,IAAA,CAAA,EAAA,KAAA,CACA,MAAA,EACA,eAAA,EACA,OAAA,EAAA,aACA,KAAA,EACA,UAAA,GACA,OAAA,EAAA,EAAA,QAAA,QACA,IAAA,EAAA,GACA,SAAA,EACA,WAAA,MAGA,QAKA,EAAA,EACA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,IAAA,GAAA,GACA,EAAA,EAAA,GACA,EAAA,EAEA,IA7PA,SAAA,GACA,EAAA,QAAA,GACA,EAAA,KAAA,aAAA,uBAAA,EAAA,QA4PA,CAAA,GACA,GAAA,GACA,IAdA,EAAA,oBACA,KAgBA,EAAA,OAAA,MACA,GAAA,GACA,IAGA,EAAA,QAAA,MACA,GAAA,GACA,IAGA,EAAA,QAAA,MACA,GAAA,GACA,IACA,IAGA,EAAA,OAAA,MACA,IACA,IAGA,EAAA,OAAA,CAAA,GACA,MAAA,EAAA,EAAA,OACA,EAAA,EAAA,GACA,IACA,IAGA,EAAA,YAAA,CAAA,IACA,mBAAA,EAAA,EAAA,UAAA,EACA,EAAA,mCACA,IAGA,EAAA,WAAA,CAAA,IACA,mBAAA,EAAA,EAAA,SAAA,EACA,EAAA,kCACA,IAGA,EAAA,eAAA,CAAA,IACA,mBAAA,EAAA,EAAA,aAAA,EACA,EAAA,sCACA,IAEA;;ACjRI,aArIJ,IAAA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,cAoII,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhIJ,IAAIA,EAAOC,SAASC,cAAc,QAC9BC,EAAUH,EAAKE,cAAc,YAC7BE,EAASD,EAAQD,cAAc,iBAC/BG,EAAUF,EAAQD,cAAc,WAChCI,EAAQD,EAAQE,iBAAiB,SACjCC,EAAS,GACTC,EAAS,GACTC,EAAM,GAGNC,GAAW,EAAf,EAAA,WAGA,SAASC,EAAgBC,GAMrB,IALF,IAAIC,EAAKb,SAASM,iBAAiB,cAI/BQ,EAAMd,SAASM,iBAAiB,cAC1BS,EAAE,EAAEA,EAAED,EAAKE,OAAOD,IACxBD,EAAKC,GAAGE,MAAMC,OAAO,UACrBJ,EAAKC,GAAGE,MAAME,OAAO,IAEvBnB,SAASC,cAAc,gBAAgBgB,MAAMC,OAAO,UACpDlB,SAASC,cAAc,qBAAqBgB,MAAMC,OAAO,UAC3D,IAAIE,EAAKpB,SAASM,iBAAiB,aACjC,IAAQS,EAAE,EAAEA,EAAEK,EAAIJ,OAAOD,IACvBK,EAAIL,GAAGE,MAAMC,OAAO,UACpBE,EAAIL,GAAGE,MAAME,OAAO,IAWxB,GATEnB,SAASC,cAAc,kBAAkBgB,MAAMC,OAAO,UACtDlB,SAASC,cAAc,oBAAoBgB,MAAMC,OAAO,UAO1DG,QAAQC,IAAIV,EAASW,OACF,GAAhBX,EAASW,MAAS,CAEnB,IADIV,EAAKb,SAASM,iBAAiB,cAC3BS,EAAE,EAAEA,EAAEF,EAAIG,OAAOD,IACvBF,EAAIE,GAAGE,MAAMC,OAAO,UAEtBlB,SAASC,cAAc,gBAAgBgB,MAAMC,OAAO,UACpDlB,SAASC,cAAc,qBAAqBgB,MAAMC,OAAO,UAE3D,GAAmB,GAAhBN,EAASW,MAAS,CACnB,IAAIC,EAAMxB,SAASM,iBAAiB,aACpC,IAAQS,EAAE,EAAEA,EAAES,EAAKR,OAAOD,IACxBS,EAAKT,GAAGE,MAAMC,OAAO,UACrBM,EAAKT,GAAGE,MAAME,OAAO,KAEvBnB,SAASC,cAAc,kBAAvB,OAAmD,UACnDD,SAASC,cAAc,oBAAvB,OAAqD,UAEpC,GAAhBW,EAASW,QACVF,QAAQC,IAAI,QACZtB,SAASC,cAAc,gBAAgBgB,MAAMC,OAAO,UACpDlB,SAASC,cAAc,kBAAkBgB,MAAMC,OAAO,WAErC,GAAhBN,EAASW,QACVvB,SAASC,cAAc,gBAAgBgB,MAAMC,OAAO,UACpDlB,SAASC,cAAc,kBAAkBgB,MAAMC,OAAO,WAI1D,SAASO,EAAYb,GACjBS,QAAQC,IAAI,WACZ,IAAII,EAAM1B,SAASM,iBAAiB,aAChCqB,EAAM3B,SAASM,iBAAiB,cACpCG,EAAKmB,KAAKC,WAAWC,iBAAiB9B,SAASC,cAAc,iBAAiB,iBAAiB8B,QAAQ,IACvGV,QAAQC,IAAIO,WAAWC,iBAAiB9B,SAASC,cAAc,iBAAiB,iBAAiB8B,QAAQ,IACzGtB,EAAKmB,KAAKC,WAAWC,iBAAiB9B,SAASC,cAAc,mBAAmB,iBAAiB8B,QAAQ,IACzGtB,EAAKmB,KAAKC,WAAWC,iBAAiB9B,SAASC,cAAc,sBAAsB,iBAAiB8B,QAAQ,IAC5GtB,EAAKmB,KAAKC,WAAWC,iBAAiB9B,SAASC,cAAc,qBAAqB,iBAAiB8B,QAAQ,IAC3G,IAAI,IAAIhB,EAAE,EAAEA,EAAEW,EAAKV,OAAOD,IACxBR,EAAQqB,KAAKC,WAAWC,iBAAiBJ,EAAKX,IAAI,iBAAiBgB,QAAQ,IAE7E,IAAQhB,EAAE,EAAEA,EAAEW,EAAKV,OAAOD,IACtBP,EAAQoB,KAAKC,WAAWC,iBAAiBH,EAAKZ,IAAI,iBAAiBgB,QAAQ,IAE7EV,QAAQC,IAAIb,GAGlB,SAASuB,EAAUpB,GACjB,GAAGqB,OAAOC,WAAW,IAAK,CAExB,IAAIR,EAAM1B,SAASM,iBAAiB,aAChCqB,EAAM3B,SAASM,iBAAiB,cAGpCN,SAASC,cAAc,gBAAgBkC,aAAa,QAAQ,gBAAgB1B,EAAK,IAAIwB,OAAOC,WAAW,MAAM,MAC7GlC,SAASC,cAAc,kBAAkBkC,aAAa,QAAQ,gBAAgB1B,EAAK,IAAIwB,OAAOC,WAAW,MAAM,MAC/GlC,SAASC,cAAc,qBAAqBkC,aAAa,QAAQ,gBAAgB1B,EAAK,IAAIwB,OAAOC,WAAW,MAAM,MAClHlC,SAASC,cAAc,oBAAoBkC,aAAa,QAAQ,gBAAgB1B,EAAK,IAAIwB,OAAOC,WAAW,MAAM,MACjH,IAAI,IAAInB,EAAE,EAAEA,EAAEW,EAAKV,OAAOD,IAMxBW,EAAKX,GAAGoB,aAAa,QAAQ,gBAAgB5B,EAAQQ,IAAIkB,OAAOC,WAAW,MAAM,MAGjF,IAAQnB,EAAE,EAAEA,EAAEW,EAAKV,OAAOD,IAExBY,EAAKZ,GAAGoB,aAAa,QAAQ,gBAAgB3B,EAAQO,IAAIkB,OAAOC,WAAW,MAAM,OAKzF,SAASE,IACPX,IACAO,IACAtB,EACG2B,MAAM,CACLC,KAAM,yBACNC,OAAQ,GACRC,OAAO,IAERC,YAAY9B,GAEfsB,OAAOS,iBAAiB,SAAUhC,EAASiC,QAC3CV,OAAOS,iBAAiB,SAAUV,GAIpCI","file":"scrollyscript.5bbdba65.js","sourceRoot":"../src","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.scrollama = factory());\n}(this, (function () { 'use strict';\n\n  // DOM helper functions\n\n  // public\n  function selectAll(selector, parent = document) {\n    if (typeof selector === 'string') {\n      return Array.from(parent.querySelectorAll(selector));\n    } else if (selector instanceof Element) {\n      return [selector];\n    } else if (selector instanceof NodeList) {\n      return Array.from(selector);\n    } else if (selector instanceof Array) {\n      return selector;\n    }\n    return [];\n  }\n\n  // SETUP\n  function create(className) {\n  \tconst el = document.createElement(\"div\");\n  \tel.className = `scrollama__debug-step ${className}`;\n  \tel.style.position = \"fixed\";\n  \tel.style.left = \"0\";\n  \tel.style.width = \"100%\";\n  \tel.style.zIndex = \"9999\";\n  \tel.style.borderTop = \"2px solid black\";\n  \tel.style.borderBottom = \"2px solid black\";\n\n  \tconst p = document.createElement(\"p\");\n  \tp.style.position = \"absolute\";\n  \tp.style.left = \"0\";\n  \tp.style.height = \"1px\";\n  \tp.style.width = \"100%\";\n  \tp.style.borderTop = \"1px dashed black\";\n\n  \tel.appendChild(p);\n  \tdocument.body.appendChild(el);\n  \treturn el;\n  }\n\n  // UPDATE\n  function update({ id, step, marginTop }) {\n  \tconst { index, height } = step;\n  \tconst className = `scrollama__debug-step--${id}-${index}`;\n  \tlet el = document.querySelector(`.${className}`);\n  \tif (!el) el = create(className);\n\n  \tel.style.top = `${marginTop * -1}px`;\n  \tel.style.height = `${height}px`;\n  \tel.querySelector(\"p\").style.top = `${height / 2}px`;\n  }\n\n  function generateId() {\n      const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n      const date = Date.now();\n      const result = [];\n      for (let i = 0; i < 6; i += 1) {\n        const char = alphabet[Math.floor(Math.random() * alphabet.length)];\n        result.push(char);\n      }\n      return `${result.join(\"\")}${date}`;\n    }\n\n  function err$1(msg) {\n  \tconsole.error(`scrollama error: ${msg}`);\n  }\n\n  function getIndex(node) {\n  \treturn +node.getAttribute(\"data-scrollama-index\");\n  }\n\n  function createProgressThreshold(height, threshold) {\n      const count = Math.ceil(height / threshold);\n      const t = [];\n      const ratio = 1 / count;\n      for (let i = 0; i < count + 1; i += 1) {\n        t.push(i * ratio);\n      }\n      return t;\n    }\n\n  function parseOffset(x) {\n  \tif (typeof x === \"string\" && x.indexOf(\"px\") > 0) {\n  \t\tconst v = +x.replace(\"px\", \"\");\n  \t\tif (!isNaN(v)) return { format: \"pixels\", value: v };\n  \t\telse {\n  \t\t\terr(\"offset value must be in 'px' format. Fallback to 0.5.\");\n  \t\t\treturn { format: \"percent\", value: 0.5 };\n  \t\t}\n  \t} else if (typeof x === \"number\" || !isNaN(+x)) {\n  \t\tif (x > 1) err(\"offset value is greater than 1. Fallback to 1.\");\n  \t\tif (x < 0) err(\"offset value is lower than 0. Fallback to 0.\");\n  \t\treturn { format: \"percent\", value: Math.min(Math.max(0, x), 1) };\n  \t}\n  \treturn null;\n  }\n\n  function indexSteps(steps) {\n  \tsteps.forEach((step) =>\n  \t\tstep.node.setAttribute(\"data-scrollama-index\", step.index)\n  \t);\n  }\n\n  function getOffsetTop(node) {\n    const { top } = node.getBoundingClientRect();\n    const scrollTop = window.pageYOffset;\n    const clientTop = document.body.clientTop || 0;\n    return top + scrollTop - clientTop;\n  }\n\n  let currentScrollY;\n  let comparisonScrollY;\n  let direction;\n\n  function onScroll(container) {\n  \tconst scrollTop = container ? container.scrollTop : window.pageYOffset;\n\n  \tif (currentScrollY === scrollTop) return;\n  \tcurrentScrollY = scrollTop;\n  \tif (currentScrollY > comparisonScrollY) direction = \"down\";\n  \telse if (currentScrollY < comparisonScrollY) direction = \"up\";\n  \tcomparisonScrollY = currentScrollY;\n  }\n\n  function setupScroll(container) {\n  \tcurrentScrollY = 0;\n  \tcomparisonScrollY = 0;\n  \tdocument.addEventListener(\"scroll\", () => onScroll(container));\n  }\n\n  function scrollama() {\n  \tlet cb = {};\n\n  \tlet id = generateId();\n  \tlet steps = [];\n  \tlet globalOffset;\n  \tlet containerElement;\n\n  \tlet progressThreshold = 0;\n\n  \tlet isEnabled = false;\n  \tlet isProgress = false;\n  \tlet isDebug = false;\n  \tlet isTriggerOnce = false;\n\n  \tlet exclude = [];\n\n  \t/* HELPERS */\n  \tfunction reset() {\n  \t\tcb = {\n  \t\t\tstepEnter: () => { },\n  \t\t\tstepExit: () => { },\n  \t\t\tstepProgress: () => { },\n  \t\t};\n  \t\texclude = [];\n  \t}\n\n  \tfunction handleEnable(shouldEnable) {\n  \t\tif (shouldEnable && !isEnabled) updateObservers();\n  \t\tif (!shouldEnable && isEnabled) disconnectObservers();\n  \t\tisEnabled = shouldEnable;\n  \t}\n\n  \t/* NOTIFY CALLBACKS */\n  \tfunction notifyProgress(element, progress) {\n  \t\tconst index = getIndex(element);\n  \t\tconst step = steps[index];\n  \t\tif (progress !== undefined) step.progress = progress;\n  \t\tconst response = { element, index, progress, direction };\n  \t\tif (step.state === \"enter\") cb.stepProgress(response);\n  \t}\n\n  \tfunction notifyStepEnter(element, check = true) {\n  \t\tconst index = getIndex(element);\n  \t\tconst step = steps[index];\n  \t\tconst response = { element, index, direction };\n\n  \t\tstep.direction = direction;\n  \t\tstep.state = \"enter\";\n\n  \t\t// if (isPreserveOrder && check && direction !== \"up\")\n  \t\t//   notifyOthers(index, \"above\");\n  \t\t// if (isPreserveOrder && check && direction === \"up\")\n  \t\t//   notifyOthers(index, \"below\");\n\n  \t\tif (!exclude[index]) cb.stepEnter(response);\n  \t\tif (isTriggerOnce) exclude[index] = true;\n  \t}\n\n  \tfunction notifyStepExit(element, check = true) {\n  \t\tconst index = getIndex(element);\n  \t\tconst step = steps[index];\n\n  \t\tif (!step.state) return false;\n\n  \t\tconst response = { element, index, direction };\n\n  \t\tif (isProgress) {\n  \t\t\tif (direction === \"down\" && step.progress < 1) notifyProgress(element, 1);\n  \t\t\telse if (direction === \"up\" && step.progress > 0)\n  \t\t\t\tnotifyProgress(element, 0);\n  \t\t}\n\n  \t\tstep.direction = direction;\n  \t\tstep.state = \"exit\";\n\n  \t\tcb.stepExit(response);\n  \t}\n\n  \t/* OBSERVERS - HANDLING */\n  \tfunction resizeStep([entry]) {\n  \t\tconst index = getIndex(entry.target);\n  \t\tconst step = steps[index];\n  \t\tconst h = entry.target.offsetHeight;\n  \t\tif (h !== step.height) {\n  \t\t\tstep.height = h;\n  \t\t\tdisconnectObserver(step);\n  \t\t\tupdateStepObserver(step);\n  \t\t\tupdateResizeObserver(step);\n  \t\t}\n  \t}\n\n  \tfunction intersectStep([entry]) {\n  \t\tonScroll(containerElement);\n\n  \t\tconst { isIntersecting, target } = entry;\n  \t\tif (isIntersecting) notifyStepEnter(target);\n  \t\telse notifyStepExit(target);\n  \t}\n\n  \tfunction intersectProgress([entry]) {\n  \t\tconst index = getIndex(entry.target);\n  \t\tconst step = steps[index];\n  \t\tconst { isIntersecting, intersectionRatio, target } = entry;\n  \t\tif (isIntersecting && step.state === \"enter\")\n  \t\t\tnotifyProgress(target, intersectionRatio);\n  \t}\n\n  \t/*  OBSERVERS - CREATION */\n  \tfunction disconnectObserver({ observers }) {\n  \t\tObject.keys(observers).map((name) => {\n  \t\t\tobservers[name].disconnect();\n  \t\t});\n  \t}\n\n  \tfunction disconnectObservers() {\n  \t\tsteps.forEach(disconnectObserver);\n  \t}\n\n  \tfunction updateResizeObserver(step) {\n  \t\tconst observer = new ResizeObserver(resizeStep);\n  \t\tobserver.observe(step.node);\n  \t\tstep.observers.resize = observer;\n  \t}\n\n  \tfunction updateResizeObservers() {\n  \t\tsteps.forEach(updateResizeObserver);\n  \t}\n\n  \tfunction updateStepObserver(step) {\n  \t\tconst h = window.innerHeight;\n  \t\tconst off = step.offset || globalOffset;\n  \t\tconst factor = off.format === \"pixels\" ? 1 : h;\n  \t\tconst offset = off.value * factor;\n  \t\tconst marginTop = step.height / 2 - offset;\n  \t\tconst marginBottom = step.height / 2 - (h - offset);\n  \t\tconst rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n\n  \t\tconst threshold = 0.5;\n  \t\tconst options = { rootMargin, threshold };\n  \t\tconst observer = new IntersectionObserver(intersectStep, options);\n\n  \t\tobserver.observe(step.node);\n  \t\tstep.observers.step = observer;\n\n  \t\tif (isDebug) update({ id, step, marginTop, marginBottom });\n  \t}\n\n  \tfunction updateStepObservers() {\n  \t\tsteps.forEach(updateStepObserver);\n  \t}\n\n  \tfunction updateProgressObserver(step) {\n  \t\tconst h = window.innerHeight;\n  \t\tconst off = step.offset || globalOffset;\n  \t\tconst factor = off.format === \"pixels\" ? 1 : h;\n  \t\tconst offset = off.value * factor;\n  \t\tconst marginTop = -offset + step.height;\n  \t\tconst marginBottom = offset - h;\n  \t\tconst rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n\n  \t\tconst threshold = createProgressThreshold(step.height, progressThreshold);\n  \t\tconst options = { rootMargin, threshold };\n  \t\tconst observer = new IntersectionObserver(intersectProgress, options);\n\n  \t\tobserver.observe(step.node);\n  \t\tstep.observers.progress = observer;\n  \t}\n\n  \tfunction updateProgressObservers() {\n  \t\tsteps.forEach(updateProgressObserver);\n  \t}\n\n  \tfunction updateObservers() {\n  \t\tdisconnectObservers();\n  \t\tupdateResizeObservers();\n  \t\tupdateStepObservers();\n  \t\tif (isProgress) updateProgressObservers();\n  \t}\n\n  \t/* SETUP */\n  \tconst S = {};\n\n  \tS.setup = ({\n  \t\tstep,\n  \t\tparent,\n  \t\toffset = 0.5,\n  \t\tthreshold = 4,\n  \t\tprogress = false,\n  \t\tonce = false,\n  \t\tdebug = false,\n  \t\tcontainer = undefined\n  \t}) => {\n\n  \t\tsetupScroll(container);\n\n  \t\tsteps = selectAll(step, parent).map((node, index) => ({\n  \t\t\tindex,\n  \t\t\tdirection: undefined,\n  \t\t\theight: node.offsetHeight,\n  \t\t\tnode,\n  \t\t\tobservers: {},\n  \t\t\toffset: parseOffset(node.dataset.offset),\n  \t\t\ttop: getOffsetTop(node),\n  \t\t\tprogress: 0,\n  \t\t\tstate: undefined,\n  \t\t}));\n\n  \t\tif (!steps.length) {\n  \t\t\terr$1(\"no step elements\");\n  \t\t\treturn S;\n  \t\t}\n\n  \t\tisProgress = progress;\n  \t\tisTriggerOnce = once;\n  \t\tisDebug = debug;\n  \t\tprogressThreshold = Math.max(1, +threshold);\n  \t\tglobalOffset = parseOffset(offset);\n  \t\tcontainerElement = container;\n\n  \t\treset();\n  \t\tindexSteps(steps);\n  \t\thandleEnable(true);\n  \t\treturn S;\n  \t};\n\n  \tS.enable = () => {\n  \t\thandleEnable(true);\n  \t\treturn S;\n  \t};\n\n  \tS.disable = () => {\n  \t\thandleEnable(false);\n  \t\treturn S;\n  \t};\n\n  \tS.destroy = () => {\n  \t\thandleEnable(false);\n  \t\treset();\n  \t\treturn S;\n  \t};\n\n  \tS.resize = () => {\n  \t\tupdateObservers();\n  \t\treturn S;\n  \t};\n\n  \tS.offset = (x) => {\n  \t\tif (x === null || x === undefined) return globalOffset.value;\n  \t\tglobalOffset = parseOffset(x);\n  \t\tupdateObservers();\n  \t\treturn S;\n  \t};\n\n  \tS.onStepEnter = (f) => {\n  \t\tif (typeof f === \"function\") cb.stepEnter = f;\n  \t\telse err$1(\"onStepEnter requires a function\");\n  \t\treturn S;\n  \t};\n\n  \tS.onStepExit = (f) => {\n  \t\tif (typeof f === \"function\") cb.stepExit = f;\n  \t\telse err$1(\"onStepExit requires a function\");\n  \t\treturn S;\n  \t};\n\n  \tS.onStepProgress = (f) => {\n  \t\tif (typeof f === \"function\") cb.stepProgress = f;\n  \t\telse err$1(\"onStepProgress requires a function\");\n  \t\treturn S;\n  \t};\n  \treturn S;\n  }\n\n  return scrollama;\n\n})));\n","import svgs from './*.svg';\nimport scrollama from 'scrollama';\n\n\n// using d3 for convenience\nvar main = document.querySelector(\"main\");\nvar scrolly = main.querySelector(\"#scrolly\");\nvar sticky = scrolly.querySelector(\".sticky-thing\");\nvar article = scrolly.querySelector(\"article\");\nvar steps = article.querySelectorAll(\".step\");\nvar els3num= [];\nvar els4num= [];\nvar rest= [];\n\n// initialize the scrollama\nvar scroller = scrollama();\n\n// scrollama event handlers\nfunction handleStepEnter(response) {\n  var els =document.querySelectorAll('#privskool')\n  // response = { element, direction, index }\n  \n  //reset all colors\n  var priv =document.querySelectorAll('#privskool')\n    for(var i=0;i<priv.length;i++){\n      priv[i].style.stroke='#ADADAD';\n      priv[i].style.zIndex=\"1\";\n    }\n    document.querySelector('#squash_priv').style.stroke='#ADADAD';\n    document.querySelector('#softball_private').style.stroke='#ADADAD';\n  var pub =document.querySelectorAll('#pubskool')\n    for(var i=0;i<pub.length;i++){\n      pub[i].style.stroke='#DBDBDB';\n      pub[i].style.zIndex=\"1\";\n    }\n    document.querySelector('#squash_public').style.stroke='#DBDBDB';\n    document.querySelector('#softball_public').style.stroke='#DBDBDB';\n\n  // remove is-active from all steps\n  // then add is-active to this step\n \n\n  // update graphic based on step\n  console.log(response.index);\n  if(response.index==1){\n    var els =document.querySelectorAll('#privskool')\n    for(var i=0;i<els.length;i++){\n      els[i].style.stroke='#D9D3FF';\n    }\n    document.querySelector('#squash_priv').style.stroke='#D9D3FF';\n    document.querySelector('#softball_private').style.stroke='#D9D3FF';\n  }\n  if(response.index==2){\n    var els2 =document.querySelectorAll('#pubskool')\n    for(var i=0;i<els2.length;i++){\n      els2[i].style.stroke='#F9FFD3';\n      els2[i].style.zIndex=\"10\";\n    }\n    document.querySelector('#squash_public')[\"stroke\"]='#F9FFD3';\n    document.querySelector('#softball_public')[\"stroke\"]='#F9FFD3';\n  }\n  if(response.index==3){\n    console.log(\"fire\")\n    document.querySelector('#squash_priv').style.stroke='#a4c7f5';\n    document.querySelector('#squash_public').style.stroke='#a4c7f5';\n  }\n  if(response.index==4){\n    document.querySelector('#squash_priv').style.stroke='#ADADAD';\n    document.querySelector('#squash_public').style.stroke='#DBDBDB';\n  }\n}\n  \nfunction pullInitial(response){\n    console.log(\"pulling\");\n    var els3 =document.querySelectorAll('#pubskool')\n    var els4 =document.querySelectorAll('#privskool')\n    rest.push(parseFloat(getComputedStyle(document.querySelector('#squash_priv'))[\"stroke-width\"]).toFixed(4));\n    console.log(parseFloat(getComputedStyle(document.querySelector('#squash_priv'))[\"stroke-width\"]).toFixed(4))\n    rest.push(parseFloat(getComputedStyle(document.querySelector('#squash_public'))[\"stroke-width\"]).toFixed(4));\n    rest.push(parseFloat(getComputedStyle(document.querySelector('#softball_private'))[\"stroke-width\"]).toFixed(4));\n    rest.push(parseFloat(getComputedStyle(document.querySelector('#softball_public'))[\"stroke-width\"]).toFixed(4));\n    for(var i=0;i<els3.length;i++){\n      els3num.push(parseFloat(getComputedStyle(els3[i])[\"stroke-width\"]).toFixed(4));\n      }\n    for(var i=0;i<els3.length;i++){\n        els4num.push(parseFloat(getComputedStyle(els4[i])[\"stroke-width\"]).toFixed(4));\n      }\n      console.log(rest);\n}\n\nfunction resizeSVG(response){\n  if(window.innerWidth<1000){\n  \n    var els3 =document.querySelectorAll('#pubskool')\n    var els4 =document.querySelectorAll('#privskool')\n    //console.log(els3);\n    //console.log(\"yeah1\");\n    document.querySelector('#squash_priv').setAttribute('style','stroke-width:'+rest[0]*(window.innerWidth/1500)+'px');\n    document.querySelector('#squash_public').setAttribute('style','stroke-width:'+rest[1]*(window.innerWidth/1500)+'px');\n    document.querySelector('#softball_private').setAttribute('style','stroke-width:'+rest[2]*(window.innerWidth/1500)+'px');\n    document.querySelector('#softball_public').setAttribute('style','stroke-width:'+rest[3]*(window.innerWidth/1500)+'px');\n    for(var i=0;i<els3.length;i++){\n      //console.log(els3[i].style[\"stroke-width\"]);\n      //var changenum = parseFloat(getComputedStyle(els3[i])[\"stroke-width\"]).toFixed(4)*0.3;\n      //console.log(\"yeah2\");\n      //console.log(changenum);\n      //console.log(\"yeah4\");\n      els3[i].setAttribute('style','stroke-width:'+els3num[i]*(window.innerWidth/1500)+'px');\n      //console.log(\"yeah5\");\n      }\n      for(var i=0;i<els3.length;i++){\n        //var changenum2 = parseFloat(getComputedStyle(els4[i])[\"stroke-width\"]).toFixed(4)*0.3;\n        els4[i].setAttribute('style','stroke-width:'+els4num[i]*(window.innerWidth/1500)+'px');\n      }\n  }\n}\n\nfunction init() {\n  pullInitial();\n  resizeSVG();\n  scroller\n    .setup({\n      step: \"#scrolly article .step\",\n      offset: 0.4,\n      debug: false\n    })\n    .onStepEnter(handleStepEnter);\n\n  window.addEventListener(\"resize\", scroller.resize);\n  window.addEventListener(\"resize\", resizeSVG);\n}\n\n// kick things off\ninit();"]}